version: "3.9"

services:
  postgres:
    container_name: postgres
    image: postgres:16.2-alpine
    ports:
      - "5432:5432"
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      - POSTGRES_DB=tmsdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - .:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d tmsdb" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
        resources:
          limits:
            cpus: '1'
            memory: 4G
    networks:
      - default

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:7.2
    environment:
      PGADMIN_DEFAULT_EMAIL: "postgres@mail.ru"
      PGADMIN_DEFAULT_PASSWORD: "postgres"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - default

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    environment:
      - TZ=Europe/Moscow
    networks:
      - default

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - TZ=Europe/Moscow
    depends_on:
      - prometheus
    networks:
      - default

  redis:
    container_name: redis
    image: redis:7.2-alpine
    restart: always
    ports:
      - '6379:6379'
    networks:
      - default

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    environment:
      - SERVER_PORT=8084
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB=ERROR
      - JWT_SECRET=86dc1443b4e0c83dcda17c4e4635c16517bac495e5cb7675eefcb650222fc70e7f697b5d5c75992ff9e2c4ecc5092121e3990e8abdf3879337c8195a27f986cfc1390319cb67dcc24f88e643e78a999e8d2b6fa8a9dde995ebf5b122ca999b3f673dddf4a00f20e73c23e90f8c19f4ca34655ff4e507ed2fe4af4f6f93b36a2c97866540409af95227d8a20ee302ed050a15a061105d8df94bbe04921624fe07d859272c69394fecaa00e4f76784b25e33ebd6afd9a24b7e80e8dc3932e3c67cc5d2e6107359f63fd0abf9387484eac455905b84d8d0307e93cc16bdb3338ff8fb5fd043f5d365139f7c9533a60039248ebf1024cdbf64bab78bd90838f007d3
      - JWT_LIFETIME=360m
      - JWT_REFRESHTOKENLIFETIME=720m
      - SPRING_APPLICATION_NAME=tms
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/tmsdb
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=false
      - SPRING_JPA_OPEN_IN_VIEW=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true
      - SPRING_JPA_DEFER_DATASOURCE_INITIALIZATION=true
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,prometheus
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
      - MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED=true
    networks:
      - default
    depends_on:
      - postgres
      - redis

networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
